#!/usr/bin/env perl
use strict;
use warnings;

BEGIN { push @INC, $0 =~ s/[^\/]+$/../r }

$|++;

use phiboot;
use phibootmacros;
use phiparse;
use philocal;
use phiobj;
use phiabstract;

use List::Util;
use Time::HiRes qw/time/;

# Test code
sub test
{
  my $method = $_[0] eq 'trace' ? shift : 'run';
  my $ilist = l @_;
  my $st = time;
  my $i  = phiboot::i->new->push($ilist)->i2->$method;
  my $dt = 1000 * (time - $st);
  printf "%.2fms: %s\n", $dt, $$i[0];
}

print "abstract interpreter\n";
test pcons(l('ds', 'cs', 'rs'), phiabstract::abstract_interpreter), mcall 'd';
test pcons(l('ds', 'cs', 'rs'), phiabstract::abstract_interpreter), mcall 'c';

test lit 'X', pcons(l('ds', 'cs', 'rs'), phiabstract::abstract_interpreter),
              mcall 'dset', head;
test lit 'X', pcons(l('ds', 'cs', 'rs'), phiabstract::abstract_interpreter),
              mcall 'cset', head;

test lit 'X', pcons(l(l('ds'), 'cs'), phiabstract::abstract_interpreter),
              mcall 'dpush', head;

test lit 'X', pcons(l('ds', l('cs')), phiabstract::abstract_interpreter),
              mcall 'cpush', head;

test pcons(l(l('X', 'ds'), 'cs'), phiabstract::abstract_interpreter),
     mcall 'dpop', swap, head, swap;

test pcons(l('d', 'c', 'r', 0, 'c?', 'co'), phiabstract::abstract_interpreter),
     mcall 'gensym', swap, mcall 'gensym', swap, mcall 'gensym', swap, drop;

print "abstract interpreter cpack\n";
test pcons(l('d', l(pnil, pnil, l('c')), pnil, 0, pnil),
           phiabstract::abstract_interpreter),
     mcall 'cpack', mcall 'has-next?';

test pcons(l('d', l(pnil, l('a', 'b', 'c'), l('d'))),
           phiabstract::abstract_interpreter),
     mcall 'cpack', head;

test pcons(l('d', l(pnil, pnil, l('c'))), phiabstract::abstract_interpreter),
     mcall 'cpack', head;

test pcons(l('d', l(pnil, pnil), pnil, 0, pnil),
           phiabstract::abstract_interpreter),
     mcall 'cpack', mcall 'has-next?';

test pcons(l('d', pnil, pnil, 0, pnil), phiabstract::abstract_interpreter),
     mcall 'cpack', mcall 'has-next?';

test pcons(l('d', l('x'), pnil, 0, 'error'), phiabstract::abstract_interpreter),
     mcall 'cpack', mcall 'has-next?';

print "abstract interpreter next-insn\n";
test pcons(l('ds', l(pnil, l('a', 'b', 'c'), l('d')), pnil, 0, pnil),
           phiabstract::abstract_interpreter),
     mcall 'cpack', head;

test pcons(l('ds', l(pnil, l('a', 'b', 'c'), l('d')), pnil, 0, pnil),
           phiabstract::abstract_interpreter),
     mcall 'cpack',
     mcall 'next-insn',
     swap, head, swap;

test pcons(l('ds', l(pnil, l('a', 'b', 'c'), l('d')), pnil, 0, pnil),
           phiabstract::abstract_interpreter),
     mcall 'cpack',
     mcall 'next-insn', drop, mcall 'next-insn', drop, mcall 'next-insn',
     swap, head, swap;

test pcons(l('ds', l(pnil, l('a', 'b', 'c'), l('d')), pnil, 0, pnil),
           phiabstract::abstract_interpreter),
     mcall 'cpack',
     mcall 'next-insn', drop, mcall 'next-insn', drop, mcall 'next-insn',
     drop, mcall 'next-insn',
     swap, head, swap;

test pcons(l('ds', l(pnil, pcons(psym 'a', psym 'b')), pnil, 0, pnil),
           phiabstract::abstract_interpreter),
     mcall 'cpack',
     mcall 'next-insn', drop, mcall 'next-insn', swap, head, swap;
