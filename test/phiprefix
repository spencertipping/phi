#!/usr/bin/env perl
use strict;
use warnings;

BEGIN { push @INC, $0 =~ s/[^\/]+$/../r }

$|++;

use phiboot;
use phibootmacros;
use phiparse;
use philocal;
use phiobj;
use phiprefix;

use List::Util;
use Time::HiRes qw/time/;

# Test code
sub test
{
  my $method = $_[0] eq 'trace' ? shift : 'run';
  my $ilist = l @_;
  my $st = time;
  my $i  = phiboot::i->new->push($ilist)->i2->$method;
  my $dt = 1000 * (time - $st);
  printf "%.2fms: %s\n", $dt, $$i[0];
}

print "list_int tests\n";
test l(0x30, 0x31, 0x32, 0x33), phiprefix::list_int, i_eval;
test l(0x31, 0x32, 0x33), phiprefix::list_int, i_eval;

print "literal_int_parser tests\n";
test l(pstr "12345", pint 0, l(pnil, pnil, pint 0)),
     phiprefix::literal_int_parser, i_eval;

print "list_string tests\n";
test l(0x30, 0x31, 0x32, 0x33), phiapplicative::list_string, i_eval;
test pnil, phiapplicative::list_string, i_eval;

print "literal_str_parser tests\n";
test l(pstr "\"foo\"", pint 0, l(pnil, pnil, pint 0)),
     phiprefix::literal_str_parser, i_eval;

test l(pstr "\"\\\"\"", pint 0, l(pnil, pnil, pint 0)),
     phiprefix::literal_str_parser, i_eval;

test l(pstr "\"\\\\\"", pint 0, l(pnil, pnil, pint 0)),
     phiprefix::literal_str_parser, i_eval;

test l(pstr "\"\"", pint 0, l(pnil, pnil, pint 0)),
     phiprefix::literal_str_parser, i_eval;
