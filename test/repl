#!/usr/bin/env perl
use strict;
use warnings;

BEGIN { push @INC, $0 =~ s/[^\/]+$/../r }

$|++;

use phiboot;
use phibootmacros;
use phibinary;
use philist;
use phiparse;
use phiobj;
use philang;
use phiops;
use phifront;

use List::Util;
use Time::HiRes qw/time/;

use phi repl_code => l
  phifront::root_scope,
  phifront::repl, i_eval;

sub perl_repl
{
  le repl_code, i_eval, i_quote, head,  # ... data-stack
     dup, list_length, i_eval,          # ... d len(d)
     lit 1, i_xor,                      # ... d len(d)!=1
     l(pstr"data stack != 1\n", 0x100,  # ... d
       0x101,                           # ...
       l("fail_value"), i_dset),        # 'fail-value
     l(drop),                           # ...
     if_;
}

sub native_repl
{
  mkdir "test/images";
  open my $fh, "> test/images/repl"
    or die "failed to create test image file: $!";
  print $fh export(repl_code);
  close $fh;

  die if system "make >/dev/null";
  exec "cat test/images/repl - | ./phiml";
}


my $repl_fn = \&native_repl;

for (@ARGV)
{
  $repl_fn = \&perl_repl if /^-i$/;
}

&$repl_fn;
